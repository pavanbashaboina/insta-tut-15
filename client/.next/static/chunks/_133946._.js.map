{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pavan/Desktop/insta-15-tut/client/lib/store/userSlice.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { signInWithPopup } from \"firebase/auth\"\r\nimport { auth, provider } from \"../utils/firebase\"\r\n\r\nconst handleError = (error, get) => {\r\n    get().setErrorMessage(error.response ? error.response.data.message : error.message)\r\n    get().setIsloading(false)\r\n}\r\n\r\nexport const userSlice = (set, get) => ({\r\n\r\n    signedUser: null,\r\n    user: null,\r\n    isAuthenticated: false,\r\n    verifiedUser: false,\r\n\r\n    //handle go back\r\n    goBack: () => {\r\n        set({ signedUser: null })\r\n    },\r\n\r\n    //signup\r\n    signUpAction: async (fullname, username, email, password) => {\r\n        get().setIsloading(true)\r\n        try {\r\n            const { data } = await axios.post(`${process.env.NEXT_PUBLIC_SERVER_URL}/v1/signup`, { fullname, username, email, password }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n            get().setMessage(data.message)\r\n            set({ signedUser: data.username })\r\n            get().setIsloading(false)\r\n\r\n        } catch (error) {\r\n            handleError(error, get)\r\n        }\r\n    },\r\n\r\n    //verify otp\r\n    verifyOtpAction: async (otp, user, type) => {\r\n        get().setIsloading(true)\r\n        try {\r\n            const { data } = await axios.post(`${process.env.NEXT_PUBLIC_SERVER_URL}/v1/verify-otp`, { otp, user, type }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                withCredentials: true\r\n            })\r\n\r\n            if (type === \"forgot\") {\r\n                set({ verifiedUser: true, isAuthenticated: false, signedUser: data.user })\r\n                get().setMessage(data.message)\r\n                get().setIsloading(false)\r\n            } else {\r\n                get().setMessage(data.message)\r\n                set({ user: data, isAuthenticated: true, signedUser: null })\r\n                get().setIsloading(false)\r\n            }\r\n\r\n        } catch (error) {\r\n            handleError(error, get)\r\n        }\r\n    },\r\n\r\n\r\n    //resend otp\r\n    resendOtp: async (user) => {\r\n        get().setIsloading(true)\r\n        try {\r\n            const { data } = await axios.post(`${process.env.NEXT_PUBLIC_SERVER_URL}/v1/resend-otp`, { user }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            })\r\n\r\n            get().setMessage(data.message)\r\n            get().setIsloading(false)\r\n            set({ signedUser: data.user })\r\n        } catch (error) {\r\n            handleError(error, get)\r\n        }\r\n    },\r\n\r\n\r\n    //Login\r\n    loginAction: async (user, password) => {\r\n        get().setIsloading(true)\r\n        try {\r\n            const { data } = await axios.post(`${process.env.NEXT_PUBLIC_SERVER_URL}/v1/login`, { user, password }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                withCredentials: true\r\n            })\r\n\r\n            set({ user: data, isAuthenticated: true, signedUser: null })\r\n            get().setMessage(data.message)\r\n            get().setIsloading(false)\r\n\r\n        } catch (error) {\r\n            handleError(error, get)\r\n        }\r\n    },\r\n\r\n    //reset password\r\n    resetPasswordAction: async (user, password, confirmPassword) => {\r\n        try {\r\n            const { data } = await axios.post(`${process.env.NEXT_PUBLIC_SERVER_URL}/v1/reset-password`, { user, password, confirmPassword }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n            get().setMessage(data.message)\r\n            set({ signedUser: null, verifiedUser: null })\r\n            get().setIsloading(false)\r\n        } catch (error) {\r\n            handleError(error, get)\r\n        }\r\n    },\r\n\r\n\r\n    //GOOGLE SIGNIN\r\n    googleSignUP: async () => {\r\n        try {\r\n            const result = await signInWithPopup(auth, provider)\r\n            const idToken = await result.user.getIdToken()\r\n\r\n            const { data } = await axios.post(`${process.env.NEXT_PUBLIC_SERVER_URL}/v1/google-signup`, { idToken }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                withCredentials: true\r\n            })\r\n\r\n            set({ user: data, isAuthenticated: true, signedUser: null })\r\n            get().setMessage(data.message)\r\n            get().setIsloading(false)\r\n\r\n        } catch (error) {\r\n            handleError(error, get)\r\n        }\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pavan/Desktop/insta-15-tut/client/lib/store/notificationSlice.js"],"sourcesContent":["export const notificationSlice = (set) => ({\r\n    message: null,\r\n    errorMessage: null,\r\n    loading: false,\r\n    setIsloading: (loading) => set({ loading }),\r\n    setMessage: (message) => {\r\n        set({ message });\r\n        setTimeout(() => {\r\n            set({ message: null })\r\n        }, 2000);\r\n    },\r\n    setErrorMessage: (errorMessage) => {\r\n        set({ errorMessage });\r\n        setTimeout(() => {\r\n            set({ errorMessage: null })\r\n        }, 2000);\r\n    },\r\n})"],"names":[],"mappings":";;;AAAO,MAAM,oBAAoB,CAAC,MAAQ,CAAC;QACvC,SAAS;QACT,cAAc;QACd,SAAS;QACT,cAAc,CAAC,UAAY,IAAI;gBAAE;YAAQ;QACzC,YAAY,CAAC;YACT,IAAI;gBAAE;YAAQ;YACd,WAAW;gBACP,IAAI;oBAAE,SAAS;gBAAK;YACxB,GAAG;QACP;QACA,iBAAiB,CAAC;YACd,IAAI;gBAAE;YAAa;YACnB,WAAW;gBACP,IAAI;oBAAE,cAAc;gBAAK;YAC7B,GAAG;QACP;IACJ,CAAC"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pavan/Desktop/insta-15-tut/client/lib/store/store.js"],"sourcesContent":["import { create } from \"zustand\"\r\nimport { persist } from \"zustand/middleware\"\r\nimport { userSlice } from \"./userSlice\"\r\nimport { notificationSlice } from \"./notificationSlice\"\r\n\r\nconst manageStore = create(\r\n    persist((set, get) => ({\r\n        ...userSlice(set, get),\r\n        ...notificationSlice(set),\r\n    }),\r\n        {\r\n            name: \"app-storage\"\r\n        }\r\n    )\r\n)\r\n\r\nexport default manageStore"],"names":[],"mappings":";;;AAEA;AACA;AAHA;AACA;;;;;AAIA,MAAM,cAAc,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,EACrB,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,EAAE,CAAC,KAAK,MAAQ,CAAC;QACnB,GAAG,CAAA,GAAA,4HAAA,CAAA,YAAS,AAAD,EAAE,KAAK,IAAI;QACtB,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD,EAAE,IAAI;IAC7B,CAAC,GACG;IACI,MAAM;AACV;uCAIO"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pavan/Desktop/insta-15-tut/client/lib/utils/ToastManager.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport { useEffect } from 'react';\r\nimport manageStore from '../store/store';\r\n\r\n\r\nconst ToastManager = () => {\r\n    const { message, errorMessage } = manageStore();\r\n\r\n\r\n    useEffect(() => {\r\n        if (message) {\r\n            toast.success(message);\r\n        }\r\n        if (errorMessage) {\r\n            toast.error(errorMessage, {\r\n                style: {\r\n                    background: '#fef2f2',\r\n                    color: '#dc2626',\r\n                },\r\n            });\r\n\r\n        }\r\n\r\n    }, [message, errorMessage]);\r\n\r\n    return <Toaster />;\r\n};\r\n\r\nexport default ToastManager;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAOA,MAAM,eAAe;;IACjB,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,UAAW,AAAD;IAG5C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,SAAS;YACT,0JAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QAClB;QACA,IAAI,cAAc;YACd,0JAAA,CAAA,QAAK,CAAC,KAAK,CAAC,cAAc;gBACtB,OAAO;oBACH,YAAY;oBACZ,OAAO;gBACX;YACJ;QAEJ;IAEJ,GAAG;QAAC;QAAS;KAAa;IAE1B,qBAAO,6LAAC,0JAAA,CAAA,UAAO;;;;;AACnB;GArBM;KAAA;uCAuBS"}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}